[versions]
# Library and plugin versions
kotlin = "2.2.0"
agp = "8.11.1"
activityCompose = "1.10.1"
springBoot = "3.5.4"
kotlinxSerialization = "1.9.0"
composeMultiplatform = "1.8.2"
lifecycleViewmodelCompose = "2.9.1"

# android-app module's android app package information
androidApp-namespace = "imager.android.app"
androidApp-compileSdk = "36"
androidApp-applicationId = "imager.android.app"
androidApp-minSdk = "24"
androidApp-targetSdk = "36"
androidApp-versionCode = "1"
androidApp-versionName = "1.0.0"

# android-app module's configuration information
androidApp-group = "imager.android.app"
androidApp-version = "1.0.0"

# compose-app module's android library package information
composeApp-androidLibrary-namespace = "imager.frontend.shared"
composeApp-androidLibrary-compileSdk = "36"
composeApp-androidLibrary-minSdk = "24"

# compose-app module's configuration information
composeApp-group = "imager.frontend.shared"
composeApp-version = "1.0.0"

# backend module's configuration information
backend-group = "imager.backend.app"
backend-version = "1.0.0"

[libraries]
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
compose-multiplatform-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "composeMultiplatform" }
compose-multiplatform-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "composeMultiplatform" }
compose-multiplatform-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "composeMultiplatform" }
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewmodelCompose" }
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "springBoot" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

[plugins]
kotlin-compiler = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
kotlin-spring-boot = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }